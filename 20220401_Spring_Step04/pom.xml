<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.min.edu</groupId>
  <artifactId>20220401_Spring_Step04</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>20220401_Spring_Step04 Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <!-- framework와 library가 의존관계의 위한 버전 통일을 위한 버전 설정-->
  	<properties>
		<java-version>1.6</java-version>
		<org.springframework-version>4.3.25.RELEASE</org.springframework-version>
		<org.aspectj-version>1.9.6</org.aspectj-version>
		<org.slf4j-version>1.7.25</org.slf4j-version>
		<org.aspect>1.9.6</org.aspect>
	</properties>
  
  <dependencies>
  <!-- Spring 관련 core,MVC 개발에 필요한 라이브러리 -->
  <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Maven의 Dependency 관계에 제외할 라이브러리를 작성 -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
	<!-- Spring MVC 개발에 SteroType인 @Controller @Service @Repository의 Annotation 기능을 사용함-->
	
  	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
	<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		
<!-- 로그처리를 자동으로 해주는 라이브러리  Log4j.jar보다 향상 된 기능 log4j를 재정의한 구현체-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
<!-- 생성된 bean DI할때 사용할 수 있는 @Autowired @Resource @Inject 사용 되는 프로젝트가 있다면 선언-->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		
<!-- Servlet 은 tomcat이 가지고 있는 라이브러리 scope를 provide로 하여 실행 할때는 maven 사용하고 배포 했을 배포 서버를 사용 하겠다-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
	<!-- 문자열 처리 -->
	<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.12.0</version>
</dependency>
	
	
	<!-- Peraiatence Layer 사용 -->
	<!-- mybatis 라이브러리 -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.5.6</version>
	</dependency>
	
	<!-- ojdbc 10 라이브러리 -->
	
	<dependency>
	    <groupId>com.oracle.database.jdbc</groupId>
	    <artifactId>ojdbc10</artifactId>
	    <version>19.12.0.0</version>
	</dependency>
	
	
	<!-- Mybatis를  SqlsesstionFactory Mybatis-Spring-->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>2.0.6</version>
	</dependency>
	<!-- Spring-orm -->
	
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-orm</artifactId>
	    <version>${org.springframework-version}</version>
	</dependency>
	<!-- DataSource 생성객체 -->
	
	<dependency>
    	<groupId>commons-dbcp</groupId>
   	 	<artifactId>commons-dbcp</artifactId>
   	 	<version>1.4</version>
	</dependency>
  
  <!-- 단위테스트 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
    </dependency>
    
    <!-- JUnit과 spring을 같이 동작시키기 위한 라이브러리 -->
    <dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-test</artifactId>
    <version>${org.springframework-version}</version>
	</dependency>
    
    <!-- 객체의 은닉화 getter/setter -->
    <dependency>
	    <groupId>org.projectlombok</groupId>
	    <artifactId>lombok</artifactId>
	    <version>1.18.20</version>
	</dependency>
    
    <!-- AOP 처리를 위한 aspect 라이브러리 -->
    <dependency>
    	<groupId>org.aspectj</groupId>
    	<artifactId>aspectjrt</artifactId>
    	<version>${org.aspect}</version>
	</dependency>
    <dependency>
    	<groupId>org.aspectj</groupId>
    	<artifactId>aspectjweaver</artifactId>
    	<version>${org.aspect}</version>
	</dependency>
    
    
    
  </dependencies>
  <build>
    <finalName>20220401_Spring_Step04</finalName>
    <plugins>
    	<plugin>
    		<artifactId>maven-compiler-plugin</artifactId>
    		<version>3.8.0</version>
    		<configuration>
    			<source>11</source>
    			<target>11</target>
    		</configuration>
    	</plugin>
    </plugins>
  </build>
</project>
